{"ast":null,"code":"import types from './types';\n\nvar setEmail = function setEmail(email) {\n  return {\n    type: types.SET_EMAIL,\n    email: email\n  };\n};\n\nvar setPassword = function setPassword(password) {\n  return {\n    type: types.SET_PASSWORD,\n    password: password\n  };\n};\n\nvar setGamescore = function setGamescore(gamescore) {\n  return {\n    type: types.SET_GAMESCORE,\n    gamescore: gamescore\n  };\n};\n\nvar updateHighscore = function updateHighscore(highscore) {\n  return {\n    type: types.UPDATE_HIGHSCORE,\n    highscore: highscore\n  };\n};\n\nvar updateLeaderboard = function updateLeaderboard(leaderboard) {\n  return {\n    type: types.UPDATE_LEADERBOARD,\n    leaderboard: leaderboard\n  };\n};\n\nvar sendGamescore = function sendGamescore(gamescore) {\n  return {\n    type: types.SEND_GAMESCORE,\n    gamescore: gamescore\n  };\n};\n\nvar login = function login(highscore) {\n  return {\n    type: types.LOGIN,\n    highscore: highscore\n  };\n};\n\nvar loginFail = function loginFail() {\n  return {\n    type: types.LOGIN\n  };\n};\n\nvar createAccount = function createAccount(highscore) {\n  return {\n    type: types.CREATE_ACCOUNT,\n    highscore: highscore\n  };\n};\n\nvar createAccountFail = function createAccountFail() {\n  return {\n    type: types.CREATE_ACCOUNT_FAIL\n  };\n};\n\nexport default {\n  setEmail: setEmail,\n  setPassword: setPassword,\n  setGamescore: setGamescore,\n  updateHighscore: updateHighscore,\n  updateLeaderboard: updateLeaderboard,\n  sendGamescore: sendGamescore,\n  login: login,\n  createAccount: createAccount,\n  loginFail: loginFail,\n  createAccountFail: createAccountFail\n};","map":{"version":3,"sources":["/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/src/app/home/duck/actions.js"],"names":["types","setEmail","email","type","SET_EMAIL","setPassword","password","SET_PASSWORD","setGamescore","gamescore","SET_GAMESCORE","updateHighscore","highscore","UPDATE_HIGHSCORE","updateLeaderboard","leaderboard","UPDATE_LEADERBOARD","sendGamescore","SEND_GAMESCORE","login","LOGIN","loginFail","createAccount","CREATE_ACCOUNT","createAccountFail","CREATE_ACCOUNT_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AACzBC,IAAAA,IAAI,EAAEH,KAAK,CAACI,SADa;AAEzBF,IAAAA,KAAK,EAALA;AAFyB,GAAL;AAAA,CAAtB;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAK;AAC/BH,IAAAA,IAAI,EAAEH,KAAK,CAACO,YADmB;AAE/BD,IAAAA,QAAQ,EAARA;AAF+B,GAAL;AAAA,CAA5B;;AAKA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS;AAAA,SAAK;AACjCN,IAAAA,IAAI,EAAEH,KAAK,CAACU,aADqB;AAEjCD,IAAAA,SAAS,EAATA;AAFiC,GAAL;AAAA,CAA9B;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,SAAS;AAAA,SAAK;AACpCT,IAAAA,IAAI,EAAEH,KAAK,CAACa,gBADwB;AAEpCD,IAAAA,SAAS,EAATA;AAFoC,GAAL;AAAA,CAAjC;;AAKA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,WAAW;AAAA,SAAK;AACxCZ,IAAAA,IAAI,EAAEH,KAAK,CAACgB,kBAD4B;AAExCD,IAAAA,WAAW,EAAXA;AAFwC,GAAL;AAAA,CAArC;;AAKA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAR,SAAS;AAAA,SAAK;AAClCN,IAAAA,IAAI,EAAEH,KAAK,CAACkB,cADsB;AAElCT,IAAAA,SAAS,EAATA;AAFkC,GAAL;AAAA,CAA/B;;AAKA,IAAMU,KAAK,GAAG,SAARA,KAAQ,CAAAP,SAAS;AAAA,SAAK;AAC1BT,IAAAA,IAAI,EAAEH,KAAK,CAACoB,KADc;AAE1BR,IAAAA,SAAS,EAATA;AAF0B,GAAL;AAAA,CAAvB;;AAKA,IAAMS,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AACvBlB,IAAAA,IAAI,EAAEH,KAAK,CAACoB;AADW,GAAP;AAAA,CAAlB;;AAIA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAV,SAAS;AAAA,SAAK;AAClCT,IAAAA,IAAI,EAAEH,KAAK,CAACuB,cADsB;AAElCX,IAAAA,SAAS,EAATA;AAFkC,GAAL;AAAA,CAA/B;;AAKA,IAAMY,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AAC/BrB,IAAAA,IAAI,EAAEH,KAAK,CAACyB;AADmB,GAAP;AAAA,CAA1B;;AAIA,eAAe;AACbxB,EAAAA,QAAQ,EAARA,QADa;AAEbI,EAAAA,WAAW,EAAXA,WAFa;AAGbG,EAAAA,YAAY,EAAZA,YAHa;AAIbG,EAAAA,eAAe,EAAfA,eAJa;AAKbG,EAAAA,iBAAiB,EAAjBA,iBALa;AAMbG,EAAAA,aAAa,EAAbA,aANa;AAObE,EAAAA,KAAK,EAALA,KAPa;AAQbG,EAAAA,aAAa,EAAbA,aARa;AASbD,EAAAA,SAAS,EAATA,SATa;AAUbG,EAAAA,iBAAiB,EAAjBA;AAVa,CAAf","sourcesContent":["import types from './types';\n\nconst setEmail = email => ({\n  type: types.SET_EMAIL,\n  email\n})\n\nconst setPassword = password => ({\n  type: types.SET_PASSWORD,\n  password\n});\n\nconst setGamescore = gamescore => ({\n  type: types.SET_GAMESCORE,\n  gamescore\n});\n\nconst updateHighscore = highscore => ({\n  type: types.UPDATE_HIGHSCORE,\n  highscore\n});\n\nconst updateLeaderboard = leaderboard => ({\n  type: types.UPDATE_LEADERBOARD,\n  leaderboard\n});\n\nconst sendGamescore = gamescore => ({\n  type: types.SEND_GAMESCORE,\n  gamescore\n});\n\nconst login = highscore => ({\n  type: types.LOGIN,\n  highscore\n});\n\nconst loginFail = () => ({\n  type: types.LOGIN\n});\n\nconst createAccount = highscore => ({\n  type: types.CREATE_ACCOUNT,\n  highscore\n});\n\nconst createAccountFail = () => ({\n  type: types.CREATE_ACCOUNT_FAIL\n});\n\nexport default {\n  setEmail,\n  setPassword,\n  setGamescore,\n  updateHighscore,\n  updateLeaderboard,\n  sendGamescore,\n  login,\n  createAccount,\n  loginFail,\n  createAccountFail\n};\n"]},"metadata":{},"sourceType":"module"}