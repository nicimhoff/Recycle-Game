{"ast":null,"code":"import _objectSpread from \"/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport types from './types';\nvar initialState = {\n  email: \"\",\n  password: \"\",\n  isLoggedIn: false,\n  highscore: 0,\n  leaderboard: [],\n  gamescore: 0,\n  sanity: true,\n  gameover: false\n};\n\nvar homeReducer = function homeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_SANITY:\n      return _objectSpread({}, state, {\n        sanity: action.sanity\n      });\n\n    case types.SET_GAMEOVER:\n      return _objectSpread({}, state, {\n        gameover: action.gameover\n      });\n\n    case types.SET_EMAIL:\n      return _objectSpread({}, state, {\n        email: action.email\n      });\n\n    case types.SET_PASSWORD:\n      return _objectSpread({}, state, {\n        password: action.password\n      });\n\n    case types.SET_GAMESCORE:\n      return _objectSpread({}, state, {\n        gamescore: action.gamescore\n      });\n\n    case types.UPDATE_HIGHSCORE:\n      return _objectSpread({}, state, {\n        highscore: action.highscore\n      });\n\n    case types.UPDATE_LEADERBOARD:\n      return _objectSpread({}, state, {\n        leaderboard: action.leaderboard\n      });\n\n    case types.SEND_GAMESCORE:\n      return _objectSpread({}, state);\n\n    case types.LOGIN:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        highscore: action.highscore\n      });\n\n    case types.LOGIN_FAIL:\n      return _objectSpread({}, state, {\n        email: \"\",\n        password: \"\"\n      });\n\n    case types.CREATE_ACCOUNT:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        highscore: action.highscore\n      });\n\n    case types.CREATE_ACCOUNT_FAIL:\n      return _objectSpread({}, state, {\n        email: \"\",\n        password: \"\"\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default homeReducer;","map":{"version":3,"sources":["/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/src/app/home/duck/reducer.js"],"names":["types","initialState","email","password","isLoggedIn","highscore","leaderboard","gamescore","sanity","gameover","homeReducer","state","action","type","SET_SANITY","SET_GAMEOVER","SET_EMAIL","SET_PASSWORD","SET_GAMESCORE","UPDATE_HIGHSCORE","UPDATE_LEADERBOARD","SEND_GAMESCORE","LOGIN","LOGIN_FAIL","CREATE_ACCOUNT","CREATE_ACCOUNT_FAIL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,SAAS,EAAE,CAJQ;AAKnBC,EAAAA,WAAW,EAAE,EALM;AAMnBC,EAAAA,SAAS,EAAE,CANQ;AAOnBC,EAAAA,MAAM,EAAE,IAPW;AAQnBC,EAAAA,QAAQ,EAAE;AARS,CAArB;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,KAAK,CAACc,UAAX;AACE,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFjB;;AAIF,SAAKR,KAAK,CAACe,YAAX;AACE,+BACKJ,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAFnB;;AAIF,SAAKT,KAAK,CAACgB,SAAX;AACE,+BACKL,KADL;AAEET,QAAAA,KAAK,EAAEU,MAAM,CAACV;AAFhB;;AAIF,SAAKF,KAAK,CAACiB,YAAX;AACE,+BACKN,KADL;AAEER,QAAAA,QAAQ,EAAES,MAAM,CAACT;AAFnB;;AAIF,SAAKH,KAAK,CAACkB,aAAX;AACE,+BACKP,KADL;AAEEJ,QAAAA,SAAS,EAAEK,MAAM,CAACL;AAFpB;;AAIF,SAAKP,KAAK,CAACmB,gBAAX;AACE,+BACKR,KADL;AAEEN,QAAAA,SAAS,EAAEO,MAAM,CAACP;AAFpB;;AAIF,SAAKL,KAAK,CAACoB,kBAAX;AACE,+BACKT,KADL;AAEEL,QAAAA,WAAW,EAAEM,MAAM,CAACN;AAFtB;;AAIF,SAAKN,KAAK,CAACqB,cAAX;AACE,+BACKV,KADL;;AAGF,SAAKX,KAAK,CAACsB,KAAX;AACE,+BACKX,KADL;AAEEP,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,SAAS,EAAEO,MAAM,CAACP;AAHpB;;AAKF,SAAKL,KAAK,CAACuB,UAAX;AACE,+BACKZ,KADL;AAEET,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,QAAQ,EAAE;AAHZ;;AAKF,SAAKH,KAAK,CAACwB,cAAX;AACE,+BACKb,KADL;AAEEP,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,SAAS,EAAEO,MAAM,CAACP;AAHpB;;AAKF,SAAKL,KAAK,CAACyB,mBAAX;AACE,+BACKd,KADL;AAEET,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,QAAQ,EAAE;AAHZ;;AAKF;AACE,+BACKQ,KADL;AAjEJ;AAqED,CAtED;;AAwEA,eAAeD,WAAf","sourcesContent":["import types from './types';\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  isLoggedIn: false,\n  highscore: 0,\n  leaderboard: [],\n  gamescore: 0,\n  sanity: true,\n  gameover: false\n};\n\nconst homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_SANITY:\n      return {\n        ...state,\n        sanity: action.sanity\n      };\n    case types.SET_GAMEOVER:\n      return {\n        ...state,\n        gameover: action.gameover\n      };\n    case types.SET_EMAIL:\n      return {\n        ...state,\n        email: action.email\n      };\n    case types.SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password\n      };\n    case types.SET_GAMESCORE:\n      return {\n        ...state,\n        gamescore: action.gamescore\n      };\n    case types.UPDATE_HIGHSCORE:\n      return {\n        ...state,\n        highscore: action.highscore\n      };\n    case types.UPDATE_LEADERBOARD:\n      return {\n        ...state,\n        leaderboard: action.leaderboard\n      };\n    case types.SEND_GAMESCORE:\n      return {\n        ...state\n      };\n    case types.LOGIN:\n      return {\n        ...state,\n        isLoggedIn: true,\n        highscore: action.highscore\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\"\n      };\n    case types.CREATE_ACCOUNT:\n      return {\n        ...state,\n        isLoggedIn: true,\n        highscore: action.highscore\n      };\n    case types.CREATE_ACCOUNT_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\"\n      };\n    default:\n      return {\n        ...state\n      }\n  }\n}\n\nexport default homeReducer;"]},"metadata":{},"sourceType":"module"}