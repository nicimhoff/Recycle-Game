{"ast":null,"code":"import _objectSpread from \"/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _this = this;\n\nimport types from './types';\nvar initialState = {\n  email: \"\",\n  password: \"\",\n  isLoggedIn: false,\n  highscore: 0,\n  leaderboard: [],\n  gamescore: 0\n};\n\nvar homeReducer = function homeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_EMAIL:\n      return _objectSpread({}, state, {\n        email: action.email\n      });\n\n    case types.SET_PASSWORD:\n      return _objectSpread({}, state, {\n        password: action.password\n      });\n\n    case types.SET_GAMESCORE:\n      return _objectSpread({}, state, {\n        gamescore: action.gamescore\n      });\n\n    case types.UPDATE_HIGHSCORE:\n      return _objectSpread({}, state, {\n        highscore: action.highscore\n      });\n\n    case types.UPDATE_LEADERBOARD:\n      return _objectSpread({}, state, {\n        leaderboard: action.leaderboard\n      });\n\n    case types.SEND_GAMESCORE:\n      if (action.gamescore > _this.state.gamescore) {\n        return _objectSpread({}, state, {\n          gamescore: action.gamescore\n        });\n      } else {\n        return _objectSpread({}, state);\n      }\n\n    case types.LOGIN:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        highscore: action.highscore\n      });\n\n    case types.LOGIN_FAIL:\n      return _objectSpread({}, state, {\n        email: \"\",\n        password: \"\"\n      });\n\n    case types.CREATE_ACCOUNT:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        highscore: action.highscore\n      });\n\n    case types.CREATE_ACCOUNT_FAIL:\n      return _objectSpread({}, state, {\n        email: \"\",\n        password: \"\"\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default homeReducer;","map":{"version":3,"sources":["/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/src/app/home/duck/reducer.js"],"names":["types","initialState","email","password","isLoggedIn","highscore","leaderboard","gamescore","homeReducer","state","action","type","SET_EMAIL","SET_PASSWORD","SET_GAMESCORE","UPDATE_HIGHSCORE","UPDATE_LEADERBOARD","SEND_GAMESCORE","LOGIN","LOGIN_FAIL","CREATE_ACCOUNT","CREATE_ACCOUNT_FAIL"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,SAAS,EAAE,CAJQ;AAKnBC,EAAAA,WAAW,EAAE,EALM;AAMnBC,EAAAA,SAAS,EAAE;AANQ,CAArB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,KAAK,CAACY,SAAX;AACE,+BACKH,KADL;AAEEP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFhB;;AAIF,SAAKF,KAAK,CAACa,YAAX;AACE,+BACKJ,KADL;AAEEN,QAAAA,QAAQ,EAAEO,MAAM,CAACP;AAFnB;;AAIF,SAAKH,KAAK,CAACc,aAAX;AACE,+BACKL,KADL;AAEEF,QAAAA,SAAS,EAAEG,MAAM,CAACH;AAFpB;;AAIF,SAAKP,KAAK,CAACe,gBAAX;AACE,+BACKN,KADL;AAEEJ,QAAAA,SAAS,EAAEK,MAAM,CAACL;AAFpB;;AAIF,SAAKL,KAAK,CAACgB,kBAAX;AACE,+BACKP,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACJ;AAFtB;;AAIF,SAAKN,KAAK,CAACiB,cAAX;AACE,UAAIP,MAAM,CAACH,SAAP,GAAmB,KAAI,CAACE,KAAL,CAAWF,SAAlC,EAA6C;AAC3C,iCACKE,KADL;AAEAF,UAAAA,SAAS,EAAEG,MAAM,CAACH;AAFlB;AAID,OALD,MAKO;AACL,iCACKE,KADL;AAGD;;AACH,SAAKT,KAAK,CAACkB,KAAX;AACE,+BACKT,KADL;AAEEL,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,SAAS,EAAEK,MAAM,CAACL;AAHpB;;AAKF,SAAKL,KAAK,CAACmB,UAAX;AACE,+BACKV,KADL;AAEEP,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,QAAQ,EAAE;AAHZ;;AAKF,SAAKH,KAAK,CAACoB,cAAX;AACE,+BACKX,KADL;AAEEL,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,SAAS,EAAEK,MAAM,CAACL;AAHpB;;AAKF,SAAKL,KAAK,CAACqB,mBAAX;AACE,+BACKZ,KADL;AAEEP,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,QAAQ,EAAE;AAHZ;;AAKF;AACE,+BACKM,KADL;AA9DJ;AAkED,CAnED;;AAqEA,eAAeD,WAAf","sourcesContent":["import types from './types';\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  isLoggedIn: false,\n  highscore: 0,\n  leaderboard: [],\n  gamescore: 0\n};\n\nconst homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_EMAIL:\n      return {\n        ...state,\n        email: action.email\n      };\n    case types.SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password\n      };\n    case types.SET_GAMESCORE:\n      return {\n        ...state,\n        gamescore: action.gamescore\n      };\n    case types.UPDATE_HIGHSCORE:\n      return {\n        ...state,\n        highscore: action.highscore\n      };\n    case types.UPDATE_LEADERBOARD:\n      return {\n        ...state,\n        leaderboard: action.leaderboard\n      };\n    case types.SEND_GAMESCORE:\n      if (action.gamescore > this.state.gamescore) {\n        return {\n          ...state,\n        gamescore: action.gamescore\n        }\n      } else {\n        return {\n          ...state\n        };\n      }\n    case types.LOGIN:\n      return {\n        ...state,\n        isLoggedIn: true,\n        highscore: action.highscore\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\"\n      };\n    case types.CREATE_ACCOUNT:\n      return {\n        ...state,\n        isLoggedIn: true,\n        highscore: action.highscore\n      };\n    case types.CREATE_ACCOUNT_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\"\n      };\n    default:\n      return {\n        ...state\n      }\n  }\n}\n\nexport default homeReducer;"]},"metadata":{},"sourceType":"module"}