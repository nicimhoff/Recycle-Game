{"ast":null,"code":"import React from 'react'; //import THREE from 'etc/three.js'\n\nvar THREE = require('three');\n\nvar scene = new THREE.scene();\nscene.background = new THREE.Color(0xf0f0f0);\nvar camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\nvar objects = [];\ncamera.position.z = 1000;\n\nfunction init() {\n  scene.add(new THREE.AmbientLight(0x0f0f0f));\n  var light = new THREE.SpotLight(0xffffff, 1.5);\n  light.position.set(0, 500, 2000);\n  scene.add(light);\n  var geometry = new THREE.SphereGeometry(40, 40, 40);\n\n  for (var i = 0; i < 100; i++) {\n    var object = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({\n      color: Math.random() * 0xffffff\n    }));\n    object.position.x = Math.random() * 1000 - 500;\n    object.position.y = Math.random() * 600 - 300;\n    object.position.z = Math.random() * 800 - 400;\n    object.castShadow = true;\n    object.receiveShadow = true;\n    scene.add(object);\n    objects.push(object);\n  }\n\n  var controls = new THREE.DragControls(objects, camera, renderer.domElement);\n  controls.addEventListener('dragstart', dragStartCallback);\n  controls.addEventListener('dragend', dragendCallback);\n}\n\nfunction animate() {\n  requestAnimationFrame(this.animate());\n  renderer.render(scene, camera);\n}\n\ninit();\nanimate();","map":{"version":3,"sources":["/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/src/app/game/GameComponent.jsx"],"names":["React","THREE","require","scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","objects","position","z","init","add","AmbientLight","light","SpotLight","set","geometry","SphereGeometry","i","object","Mesh","MeshLambertMaterial","color","Math","random","x","y","castShadow","receiveShadow","push","controls","DragControls","addEventListener","dragStartCallback","dragendCallback","animate","requestAnimationFrame","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,KAAK,GAAG,IAAIF,KAAK,CAACE,KAAV,EAAZ;AACAA,KAAK,CAACC,UAAN,GAAmB,IAAIH,KAAK,CAACI,KAAV,CAAiB,QAAjB,CAAnB;AACA,IAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,CAAzE,EAA4E,KAA5E,CAAb;AAEA,IAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,EAAf;AACAD,QAAQ,CAACE,OAAT,CAAkBL,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAI,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA2BL,QAAQ,CAACM,UAApC;AACA,IAAIC,OAAO,GAAG,EAAd;AAEAZ,MAAM,CAACa,QAAP,CAAgBC,CAAhB,GAAoB,IAApB;;AAGE,SAASC,IAAT,GAAgB;AACdlB,EAAAA,KAAK,CAACmB,GAAN,CAAU,IAAIrB,KAAK,CAACsB,YAAV,CAAuB,QAAvB,CAAV;AACE,MAAIC,KAAK,GAAG,IAAIvB,KAAK,CAACwB,SAAV,CAAqB,QAArB,EAA+B,GAA/B,CAAZ;AACAD,EAAAA,KAAK,CAACL,QAAN,CAAeO,GAAf,CAAoB,CAApB,EAAuB,GAAvB,EAA4B,IAA5B;AAEAvB,EAAAA,KAAK,CAACmB,GAAN,CAAUE,KAAV;AACA,MAAIG,QAAQ,GAAG,IAAI1B,KAAK,CAAC2B,cAAV,CAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,CAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,QAAIC,MAAM,GAAG,IAAI7B,KAAK,CAAC8B,IAAV,CAAgBJ,QAAhB,EAA0B,IAAI1B,KAAK,CAAC+B,mBAAV,CAA+B;AAAEC,MAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAAzB,KAA/B,CAA1B,CAAb;AAEAL,IAAAA,MAAM,CAACX,QAAP,CAAgBiB,CAAhB,GAAoBF,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,GAA3C;AACAL,IAAAA,MAAM,CAACX,QAAP,CAAgBkB,CAAhB,GAAoBH,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAA1C;AACAL,IAAAA,MAAM,CAACX,QAAP,CAAgBC,CAAhB,GAAoBc,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAA1C;AAEAL,IAAAA,MAAM,CAACQ,UAAP,GAAoB,IAApB;AACAR,IAAAA,MAAM,CAACS,aAAP,GAAuB,IAAvB;AAEApC,IAAAA,KAAK,CAACmB,GAAN,CAAWQ,MAAX;AAEAZ,IAAAA,OAAO,CAACsB,IAAR,CAAcV,MAAd;AACH;;AAED,MAAIW,QAAQ,GAAG,IAAIxC,KAAK,CAACyC,YAAV,CAAwBxB,OAAxB,EAAiCZ,MAAjC,EAAyCK,QAAQ,CAACM,UAAlD,CAAf;AACAwB,EAAAA,QAAQ,CAACE,gBAAT,CAA2B,WAA3B,EAAwCC,iBAAxC;AACAH,EAAAA,QAAQ,CAACE,gBAAT,CAA2B,SAA3B,EAAsCE,eAAtC;AACH;;AACD,SAASC,OAAT,GAAkB;AACdC,EAAAA,qBAAqB,CAAC,KAAKD,OAAL,EAAD,CAArB;AAEAnC,EAAAA,QAAQ,CAACqC,MAAT,CAAgB7C,KAAhB,EAAsBG,MAAtB;AACH;;AACFe,IAAI;AACJyB,OAAO","sourcesContent":["import React from 'react';\n//import THREE from 'etc/three.js'\nvar THREE = require('three');\nvar scene = new THREE.scene\nscene.background = new THREE.Color( 0xf0f0f0 );\nvar camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 10000 );\n\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\nvar objects = [];\n\ncamera.position.z = 1000;\n\n\n  function init() {\n    scene.add(new THREE.AmbientLight(0x0f0f0f));\n      var light = new THREE.SpotLight( 0xffffff, 1.5 );\n      light.position.set( 0, 500, 2000 );\n\n      scene.add(light);\n      var geometry = new THREE.SphereGeometry(40,40,40);\n\n      for (var i = 0; i < 100; i++) {\n          var object = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );\n\n          object.position.x = Math.random() * 1000 - 500;\n          object.position.y = Math.random() * 600 - 300;\n          object.position.z = Math.random() * 800 - 400;\n\n          object.castShadow = true;\n          object.receiveShadow = true;\n\n          scene.add( object );\n\n          objects.push( object );\n      }\n\n      var controls = new THREE.DragControls( objects, camera, renderer.domElement );\n      controls.addEventListener( 'dragstart', dragStartCallback );\n      controls.addEventListener( 'dragend', dragendCallback );\n  }\n  function animate(){\n      requestAnimationFrame(this.animate())\n\n      renderer.render(scene,camera)\n  }\n init()\n animate()\n\n\n\n"]},"metadata":{},"sourceType":"module"}