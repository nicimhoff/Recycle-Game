{"ast":null,"code":"import _classCallCheck from \"/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/src/app/game/GameComponent.jsx\";\nimport React from 'react'; //import THREE from 'js/three.js'\n\nvar THREE = require('three'); //import * as THREE from 'three'\n\n\nvar scene = new THREE.scene();\nscene.background = new THREE.Color(0xf0f0f0);\nvar camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\nvar objects = [];\ncamera.position.z = 1000;\n\nvar GameComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GameComponent, _React$Component);\n\n  function GameComponent(props) {\n    var _this;\n\n    _classCallCheck(this, GameComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GameComponent).call(this, props));\n    _this.state = {\n      gameScore: 0\n    };\n    return _this;\n  }\n\n  _createClass(GameComponent, [{\n    key: \"init\",\n    value: function init() {\n      scene.add(new THREE.AmbientLight(0x0f0f0f));\n      var light = new THREE.SpotLight(0xffffff, 1.5);\n      light.position.set(0, 500, 2000);\n      scene.add(light);\n      var geometry = new THREE.SphereGeometry(40, 40, 40);\n\n      for (var i = 0; i < 100; i++) {\n        var object = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({\n          color: Math.random() * 0xffffff\n        }));\n        object.position.x = Math.random() * 1000 - 500;\n        object.position.y = Math.random() * 600 - 300;\n        object.position.z = Math.random() * 800 - 400;\n        object.castShadow = true;\n        object.receiveShadow = true;\n        scene.add(object);\n        objects.push(object);\n      } // var controls = new THREE.DragControls(objects, camera, renderer.domElement);\n      // controls.addEventListener('dragstart', dragStartCallback);\n      //controls.addEventListener('dragend', dragendCallback);\n\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      requestAnimationFrame(this.animate());\n      renderer.render(scene, camera);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Page here\");\n    }\n  }]);\n\n  return GameComponent;\n}(React.Component);\n\nexport default GameComponent;","map":{"version":3,"sources":["/Users/bulatbikmullin/WebstormProjects/Recycle-Game/frontend/src/app/game/GameComponent.jsx"],"names":["React","THREE","require","scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","objects","position","z","GameComponent","props","state","gameScore","add","AmbientLight","light","SpotLight","set","geometry","SphereGeometry","i","object","Mesh","MeshLambertMaterial","color","Math","random","x","y","castShadow","receiveShadow","push","requestAnimationFrame","animate","render","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n//import THREE from 'js/three.js'\nvar THREE = require('three');\n\n//import * as THREE from 'three'\nvar scene = new THREE.scene\nscene.background = new THREE.Color(0xf0f0f0);\nvar camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth,window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\nvar objects = [];\ncamera.position.z = 1000;\n\nclass GameComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gameScore: 0\n        };\n    }\n\n\n\n    init() {\n        scene.add(new THREE.AmbientLight(0x0f0f0f));\n        var light = new THREE.SpotLight(0xffffff, 1.5);\n        light.position.set(0, 500, 2000);\n\n        scene.add(light);\n        var geometry = new THREE.SphereGeometry(40, 40, 40);\n\n        for (var i = 0; i < 100; i++) {\n            var object = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({color: Math.random() * 0xffffff}));\n\n            object.position.x = Math.random() * 1000 - 500;\n            object.position.y = Math.random() * 600 - 300;\n            object.position.z = Math.random() * 800 - 400;\n\n            object.castShadow = true;\n            object.receiveShadow = true;\n\n            scene.add(object);\n\n            objects.push(object);\n        }\n\n       // var controls = new THREE.DragControls(objects, camera, renderer.domElement);\n       // controls.addEventListener('dragstart', dragStartCallback);\n        //controls.addEventListener('dragend', dragendCallback);\n    }\n\n\n    animate() {\n        requestAnimationFrame(this.animate())\n\n        renderer.render(scene, camera)\n    }\n    render() {\n        return (\n            <div>Page here</div>\n        );\n    }\n}\nexport default GameComponent;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}