{"ast":null,"code":"import _regeneratorRuntime from \"/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport actions from './actions';\nimport { Auth } from \"aws-amplify\";\n\nvar setEmail = function setEmail(email) {\n  return function (dispatch) {\n    return dispatch(actions.setEmail(email));\n  };\n};\n\nvar setPassword = function setPassword(password) {\n  return function (dispatch) {\n    return dispatch(actions.setPassword(password));\n  };\n};\n\nvar setGamescore = function setGamescore(gamescore) {\n  return function (dispatch) {\n    return dispatch(actions.setGamescore(gamescore));\n  };\n};\n\nvar updateHighscore = function updateHighscore(email) {};\n\nvar updateLeaderboard = function updateLeaderboard() {};\n\nvar sendGamescore = function sendGamescore(email, gamescore) {\n  return;\n};\n\nvar login = function login(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Auth.signIn(email, password);\n\n              case 3:\n                _context.next = 5;\n                return axios.get(\"https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getUser?email=\".concat(email));\n\n              case 5:\n                response = _context.sent;\n                console.log(response.data.Items[0].score);\n                return _context.abrupt(\"return\", dispatch(actions.login(response.data.Items[0].score)));\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                alert(_context.t0.message);\n                return _context.abrupt(\"return\", dispatch(actions.loginFail()));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar createAccount = function createAccount(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Auth.signUp({\n                  username: email,\n                  password: password\n                });\n\n              case 3:\n                _context2.next = 5;\n                return Auth.signIn(email, password);\n\n              case 5:\n                _context2.next = 7;\n                return axios.get(\"https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getUser?email=\".concat(email));\n\n              case 7:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", dispatch(actions.createAccount(response.data.Items[0].score)));\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                alert(_context2.t0.message);\n                return _context2.abrupt(\"return\", dispatch(actions.createAccountFail()));\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 11]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nexport default {\n  setEmail: setEmail,\n  setPassword: setPassword,\n  setGamescore: setGamescore,\n  updateHighscore: updateHighscore,\n  updateLeaderboard: updateLeaderboard,\n  sendGamescore: sendGamescore,\n  login: login,\n  createAccount: createAccount\n};","map":{"version":3,"sources":["/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/src/app/home/duck/operations.js"],"names":["axios","actions","Auth","setEmail","email","dispatch","setPassword","password","setGamescore","gamescore","updateHighscore","updateLeaderboard","sendGamescore","login","signIn","get","response","console","log","data","Items","score","alert","message","loginFail","createAccount","signUp","username","createAccountFail"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport actions from './actions';\nimport { Auth } from \"aws-amplify\";\n\nconst setEmail = email => {\n  return dispatch => {\n    return dispatch(actions.setEmail(email));\n  };\n};\n\nconst setPassword = password => {\n  return dispatch => {\n    return dispatch(actions.setPassword(password));\n  };\n};\n\nconst setGamescore = gamescore => {\n  return dispatch => {\n    return dispatch(actions.setGamescore(gamescore));\n  };\n}\n\nconst updateHighscore = email => {\n\n}\n\nconst updateLeaderboard = () => {\n\n}\n\nconst sendGamescore = (email, gamescore) => {\n  return;\n}\n\nconst login = (email, password) => {\n  return async dispatch => {\n    try {\n      await Auth.signIn(email, password);\n      const response = await axios.get(\n        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getUser?email=${email}`\n      );\n      console.log(response.data.Items[0].score)\n      return dispatch(actions.login(response.data.Items[0].score));\n    } catch (error) {\n      alert(error.message);\n      return dispatch(actions.loginFail());\n    }\n  };\n};\n\nconst createAccount = (email, password) => {\n  return async dispatch => {\n    try {\n      await Auth.signUp({\n        username: email,\n        password: password\n      });\n      await Auth.signIn(email, password);\n      const response = await axios.get(\n        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getUser?email=${email}`\n      );\n      return dispatch(actions.createAccount(response.data.Items[0].score));\n    } catch (error) {\n      alert(error.message);\n      return dispatch(actions.createAccountFail());\n    }\n  };\n};\n\nexport default {\n  setEmail,\n  setPassword,\n  setGamescore,\n  updateHighscore,\n  updateLeaderboard,\n  sendGamescore,\n  login,\n  createAccount\n};\n"]},"metadata":{},"sourceType":"module"}