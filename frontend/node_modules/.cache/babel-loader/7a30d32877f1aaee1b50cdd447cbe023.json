{"ast":null,"code":"import _objectSpread from \"/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport types from './types';\nvar initialState = {\n  email: \"\",\n  password: \"\",\n  isLoggedIn: false\n};\n\nvar homeReducer = function homeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_EMAIL:\n      return _objectSpread({}, state, {\n        email: action.email\n      });\n\n    case types.SET_PASSWORD:\n      return _objectSpread({}, state, {\n        password: action.password\n      });\n\n    case types.LOGIN:\n      return _objectSpread({}, state, {\n        isLoggedIn: true\n      });\n\n    case types.LOGIN_FAIL:\n      return _objectSpread({}, state, {\n        email: \"\",\n        password: \"\",\n        isLoggedIn: false\n      });\n\n    case types.CREATE_ACCOUNT:\n      return _objectSpread({}, state, {\n        isLoggedIn: true\n      });\n\n    case types.CREATE_ACCOUNT_FAIL:\n      return _objectSpread({}, state, {\n        email: \"\",\n        password: \"\",\n        isLoggedIn: false\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default homeReducer;","map":{"version":3,"sources":["/Users/NicolasImhoff/Documents/GitHub/Recycle-Game/frontend/src/app/home/duck/reducer.js"],"names":["types","initialState","email","password","isLoggedIn","homeReducer","state","action","type","SET_EMAIL","SET_PASSWORD","LOGIN","LOGIN_FAIL","CREATE_ACCOUNT","CREATE_ACCOUNT_FAIL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,SAAX;AACE,+BACKH,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAFhB;;AAIF,SAAKF,KAAK,CAACU,YAAX;AACE,+BACKJ,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFnB;;AAIF,SAAKH,KAAK,CAACW,KAAX;AACE,+BACKL,KADL;AAEEF,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKJ,KAAK,CAACY,UAAX;AACE,+BACKN,KADL;AAEEJ,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,QAAQ,EAAE,EAHZ;AAIEC,QAAAA,UAAU,EAAE;AAJd;;AAMF,SAAKJ,KAAK,CAACa,cAAX;AACE,+BACKP,KADL;AAEEF,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKJ,KAAK,CAACc,mBAAX;AACE,+BACKR,KADL;AAEEJ,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,QAAQ,EAAE,EAHZ;AAIEC,QAAAA,UAAU,EAAE;AAJd;;AAMF;AACE,+BACKE,KADL;AApCJ;AAwCD,CAzCD;;AA2CA,eAAeD,WAAf","sourcesContent":["import types from './types';\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  isLoggedIn: false\n};\n\nconst homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_EMAIL:\n      return {\n        ...state,\n        email: action.email\n      };\n    case types.SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password\n      };\n    case types.LOGIN:\n      return {\n        ...state,\n        isLoggedIn: true\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\",\n        isLoggedIn: false\n      };\n    case types.CREATE_ACCOUNT:\n      return {\n        ...state,\n        isLoggedIn: true\n      };\n    case types.CREATE_ACCOUNT_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\",\n        isLoggedIn: false\n      };\n    default:\n      return {\n        ...state\n      }\n  }\n}\n\nexport default homeReducer;"]},"metadata":{},"sourceType":"module"}