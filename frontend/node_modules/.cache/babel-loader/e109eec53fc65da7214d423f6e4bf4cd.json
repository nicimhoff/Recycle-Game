{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _th = require('./th');\n\nvar _filterer = require('./filterer');\n\nvar _libFilter_props_from = require('./lib/filter_props_from');\n\nvar Thead = function (_React$Component) {\n  _inherits(Thead, _React$Component);\n\n  function Thead() {\n    _classCallCheck(this, Thead);\n\n    _get(Object.getPrototypeOf(Thead.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Thead, [{\n    key: 'handleClickTh',\n    value: function handleClickTh(column) {\n      this.props.onSort(column.key);\n    }\n  }, {\n    key: 'handleKeyDownTh',\n    value: function handleKeyDownTh(column, event) {\n      if (event.keyCode === 13) {\n        this.props.onSort(column.key);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // Declare the list of Ths\n      var Ths = [];\n\n      for (var index = 0; index < this.props.columns.length; index++) {\n        var column = this.props.columns[index];\n        var thClass = 'reactable-th-' + column.key.replace(/\\s+/g, '-').toLowerCase();\n        var sortClass = '';\n        var thRole = null;\n\n        if (this.props.sortableColumns[column.key]) {\n          sortClass += 'reactable-header-sortable ';\n          thRole = 'button';\n        }\n\n        if (this.props.sort.column === column.key) {\n          sortClass += 'reactable-header-sort';\n\n          if (this.props.sort.direction === 1) {\n            sortClass += '-asc';\n          } else {\n            sortClass += '-desc';\n          }\n        }\n\n        if (sortClass.length > 0) {\n          thClass += ' ' + sortClass;\n        }\n\n        if (typeof column.props === 'object' && typeof column.props.className === 'string') {\n          thClass += ' ' + column.props.className;\n        }\n\n        Ths.push(_react2['default'].createElement(_th.Th, _extends({}, column.props, {\n          className: thClass,\n          key: index,\n          onClick: this.handleClickTh.bind(this, column),\n          onKeyDown: this.handleKeyDownTh.bind(this, column),\n          role: thRole,\n          tabIndex: '0'\n        }), column.label));\n      } // Manually transfer props\n\n\n      var props = (0, _libFilter_props_from.filterPropsFrom)(this.props);\n      return _react2['default'].createElement('thead', props, this.props.filtering === true ? _react2['default'].createElement(_filterer.Filterer, {\n        colSpan: this.props.columns.length,\n        onFilter: this.props.onFilter,\n        placeholder: this.props.filterPlaceholder,\n        value: this.props.currentFilter,\n        className: this.props.filterClassName\n      }) : null, _react2['default'].createElement('tr', {\n        className: 'reactable-column-header'\n      }, Ths));\n    }\n  }], [{\n    key: 'getColumns',\n    value: function getColumns(component) {\n      // Can't use React.Children.map since that doesn't return a proper array\n      var columns = [];\n\n      _react2['default'].Children.forEach(component.props.children, function (th) {\n        var column = {};\n        if (!th) return;\n\n        if (typeof th.props !== 'undefined') {\n          column.props = (0, _libFilter_props_from.filterPropsFrom)(th.props); // use the content as the label & key\n\n          if (typeof th.props.children !== 'undefined') {\n            column.label = th.props.children;\n            column.key = column.label;\n          } // the key in the column attribute supersedes the one defined previously\n\n\n          if (typeof th.props.column === 'string') {\n            column.key = th.props.column; // in case we don't have a label yet\n\n            if (typeof column.label === 'undefined') {\n              column.label = column.key;\n            }\n          }\n        }\n\n        if (typeof column.key === 'undefined') {\n          throw new TypeError('<th> must have either a \"column\" property or a string ' + 'child');\n        } else {\n          columns.push(column);\n        }\n      });\n\n      return columns;\n    }\n  }]);\n\n  return Thead;\n}(_react2['default'].Component);\n\nexports.Thead = Thead;\n;","map":null,"metadata":{},"sourceType":"script"}