{"version":3,"sources":["app/home/recycle.png","app/home/duck/types.js","app/home/duck/reducer.js","app/home/duck/actions.js","app/home/duck/operations.js","app/home/duck/index.js","reducers.js","configureStore.js","serviceWorker.js","app/home/HomeComponent.jsx","app/home/index.js","app/home/HomeContainer.js","app/game/index.js","app/game/GameComponent.jsx","app/App.jsx","app/index.js","config.js","index.js"],"names":["module","exports","__webpack_require__","p","types","initialState","email","password","isLoggedIn","highscore","leaderboard","gamescore","homeReducer","state","arguments","length","undefined","action","type","Object","objectSpread","actions","operations","dispatch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","console","log","abrupt","data","Items","score","t0","stop","_x","apply","this","_ref2","_callee2","_context2","forEach","element","push","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","Auth","signIn","alert","message","_x4","_ref5","_callee5","_context5","signUp","username","_x5","rootReducer","combineReducers","home","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Boolean","location","hostname","match","HomeComponent","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onQuestionOneChange","event","answer","target","value","setState","questionOne","onQuestionTwoChange","questionTwo","onQuestionThreeChange","questionThree","onSubmitQuestions","history","onEmailChange","setEmail","onPasswordChange","setPassword","onLogin","onClickWindow","login","onCreateAccount","createAccount","onPlayAgain","endofroundDisplay","questionDisplay","onClickImg","onClickPlay","onClickLogin","loginDisplay","onClickLeaderboard","leaderboardDisplay","updateHighscore","updateLeaderboard","onEndRound","setGamescore","sendGamescore","_this2","react_default","createElement","className","src","recycle","onClick","alt","height","width","id","style","display","onSubmit","for","onChange","q1","required","q2","q3","placeholder","name","reactable","noDataText","itemsPerPage","column","React","Component","HomeContainer","connect","homeOperations","GameComponent","gameScore","createHistory","App","react_router","exact","path","component","Home","baseUrl","Game","config","REGION","BUCKET","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","store","createStore","applyMiddleware","thunk","jsx","es","app","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85e5035a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/recycle.61888d37.png\";","const SET_EMAIL = \"SET_EMAIL\";\nconst SET_PASSWORD = \"SET_PASSWORD\";\nconst SET_GAMESCORE = \"SET_GAMESCORE\";\nconst UPDATE_HIGHSCORE = \"UPDATE_HIGHSCORE\";\nconst UPDATE_LEADERBOARD = \"UPDATE_LEADERBOARD\";\nconst SEND_GAMESCORE = \"SEND_GAMESCORE\";\nconst LOGIN = \"LOGIN\";\nconst LOGIN_FAIL = \"LOGIN_FAIL\";\nconst CREATE_ACCOUNT = \"CREATE_ACCOUNT\";\nconst CREATE_ACCOUNT_FAIL = \"CREATE_ACCOUNT_FAIL\";\n\nexport default{\n  SET_EMAIL,\n  SET_PASSWORD,\n  SET_GAMESCORE,\n  UPDATE_HIGHSCORE,\n  UPDATE_LEADERBOARD,\n  SEND_GAMESCORE,\n  LOGIN,\n  LOGIN_FAIL,\n  CREATE_ACCOUNT,\n  CREATE_ACCOUNT_FAIL\n}","import types from './types';\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  isLoggedIn: false,\n  highscore: 0,\n  leaderboard: [],\n  gamescore: 0\n};\n\nconst homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_EMAIL:\n      return {\n        ...state,\n        email: action.email\n      };\n    case types.SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password\n      };\n    case types.SET_GAMESCORE:\n      return {\n        ...state,\n        gamescore: action.gamescore\n      };\n    case types.UPDATE_HIGHSCORE:\n      return {\n        ...state,\n        highscore: action.highscore\n      };\n    case types.UPDATE_LEADERBOARD:\n      return {\n        ...state,\n        leaderboard: action.leaderboard\n      };\n    case types.SEND_GAMESCORE:\n      return {\n        ...state\n      };\n    case types.LOGIN:\n      return {\n        ...state,\n        isLoggedIn: true,\n        highscore: action.highscore\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\"\n      };\n    case types.CREATE_ACCOUNT:\n      return {\n        ...state,\n        isLoggedIn: true,\n        highscore: action.highscore\n      };\n    case types.CREATE_ACCOUNT_FAIL:\n      return {\n        ...state,\n        email: \"\",\n        password: \"\"\n      };\n    default:\n      return {\n        ...state\n      }\n  }\n}\n\nexport default homeReducer;","import types from './types';\n\nconst setEmail = email => ({\n  type: types.SET_EMAIL,\n  email\n})\n\nconst setPassword = password => ({\n  type: types.SET_PASSWORD,\n  password\n});\n\nconst setGamescore = gamescore => ({\n  type: types.SET_GAMESCORE,\n  gamescore\n});\n\nconst updateHighscore = highscore => ({\n  type: types.UPDATE_HIGHSCORE,\n  highscore\n});\n\nconst updateLeaderboard = leaderboard => ({\n  type: types.UPDATE_LEADERBOARD,\n  leaderboard\n});\n\nconst sendGamescore = gamescore => ({\n  type: types.SEND_GAMESCORE,\n  gamescore\n});\n\nconst login = highscore => ({\n  type: types.LOGIN,\n  highscore\n});\n\nconst loginFail = () => ({\n  type: types.LOGIN\n});\n\nconst createAccount = highscore => ({\n  type: types.CREATE_ACCOUNT,\n  highscore\n});\n\nconst createAccountFail = () => ({\n  type: types.CREATE_ACCOUNT_FAIL\n});\n\nexport default {\n  setEmail,\n  setPassword,\n  setGamescore,\n  updateHighscore,\n  updateLeaderboard,\n  sendGamescore,\n  login,\n  createAccount,\n  loginFail,\n  createAccountFail\n};\n","import axios from 'axios';\nimport actions from './actions';\nimport { Auth } from \"aws-amplify\";\n\nconst setEmail = email => {\n  return dispatch => {\n    return dispatch(actions.setEmail(email));\n  };\n};\n\nconst setPassword = password => {\n  return dispatch => {\n    return dispatch(actions.setPassword(password));\n  };\n};\n\nconst setGamescore = gamescore => {\n  return dispatch => {\n    return dispatch(actions.setGamescore(gamescore));\n  };\n}\n\nconst updateHighscore = email => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(\n        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getUser?email=${email}`\n      );\n      console.log (\"updating highscore: \" + response)\n      return dispatch(actions.updateHighscore(response.data.Items[0].score));\n    } catch (error) {\n      return dispatch(actions.updateHighscore(0));\n    }\n  };\n}\n\nconst updateLeaderboard = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(\n        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getLeaderboard`\n      );\n      var leaderboard = [];\n      response.data.forEach((element) => {\n        leaderboard.push(element[0]);\n        leaderboard.push(element[0]);\n        leaderboard.push(element[0]);\n        leaderboard.push(element[0]);\n      });\n      \n      return dispatch(actions.updateLeaderboard(leaderboard));\n    } catch (error) {\n      return dispatch(actions.updateLeaderboard([]));\n    }\n  };\n}\n\nconst sendGamescore = (email, gamescore) => {\n  return async dispatch => {\n    try {\n      await axios.get(\n        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/updateScore?email=${email}&score=${gamescore}`\n      )\n      return dispatch(actions.sendGamescore(gamescore));\n    } catch (error) {\n      return dispatch(actions.sendGamescore(gamescore));\n    }\n  };\n}\n\n//        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/updateScore?email=${email}&score=${gamescore}`\n\nconst login = (email, password) => {\n  return async dispatch => {\n    try {\n      await Auth.signIn(email, password);\n      const response = await axios.get(\n        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getUser?email=${email}`\n      );\n      console.log(response.data.Items[0].score)\n      return dispatch(actions.login(response.data.Items[0].score));\n    } catch (error) {\n      alert(error.message);\n      return dispatch(actions.loginFail());\n    }\n  };\n};\n\nconst createAccount = (email, password) => {\n  return async dispatch => {\n    try {\n      await Auth.signUp({\n        username: email,\n        password: password\n      });\n      await Auth.signIn(email, password);\n      const response = await axios.get(\n        `https://aqq11p2sd0.execute-api.us-east-2.amazonaws.com/default/getUser?email=${email}`\n      );\n      return dispatch(actions.createAccount(response.data.Items[0].score));\n    } catch (error) {\n      alert(error.message);\n      return dispatch(actions.createAccountFail());\n    }\n  };\n};\n\nexport default {\n  setEmail,\n  setPassword,\n  setGamescore,\n  updateHighscore,\n  updateLeaderboard,\n  sendGamescore,\n  login,\n  createAccount\n};\n","import homeReducer from './reducer';\nexport { default as homeOperations } from './operations';\nexport { default as homeTypes } from './types';\nexport default homeReducer;\n","import { combineReducers } from 'redux';\n// import other reducers here\nimport homeReducer from './app/home/duck';\n\nconst rootReducer = combineReducers({\n  home: homeReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport recycle from './recycle.png';\nimport './HomeComponent.css';\nimport { Table, Thead, Th } from 'reactable';\n\nclass HomeComponent extends React.Component {  \n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questionDisplay: \"none\",\n      loginDisplay: \"none\",\n      leaderboardDisplay: \"none\",\n      endofroundDisplay: \"none\",\n      score: 0,\n      questionOne: 0,\n      questionTwo: 0,\n      questionThree: 0\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isLoggedIn === true) {\n      this.props.updateHighscore(this.props.email);\n    }\n    this.props.updateLeaderboard();\n  }\n\n  onQuestionOneChange = event => {\n    var answer = event.target.value;\n    if (answer === '0') answer = 0;\n    if (answer === '1') answer = 1;\n    this.setState(() => ({ \n      questionOne: answer\n    }));\n  }\n\n  onQuestionTwoChange = event => {\n    var answer = event.target.value;\n    if (answer === '0') answer = 0;\n    if (answer === '1') answer = 1;\n    this.setState(() => ({ \n      questionTwo: answer\n    }));\n  }\n\n  onQuestionThreeChange = event => {\n    var answer = event.target.value;\n    if (answer === '0') answer = 0;\n    if (answer === '1') answer = 1;\n    this.setState(() => ({ \n      questionThree: answer\n    }));\n  }\n\n  onSubmitQuestions = () => {\n    this.setState(() => ({\n      score: this.state.questionOne + this.state.questionTwo + this.state.questionThree\n    }));\n    if (this.state.score < 2) {\n      // set sanity to \"good\"\n      return this.props.history.push('/game');\n    } else {\n      // set sanity to \"evil\"\n      return this.props.history.push('/game');\n    }\n  }\n\n  onEmailChange = event => {\n    const email = event.target.value;\n    this.props.setEmail(email);\n  };\n\n  onPasswordChange = event => {\n    const password = event.target.value;\n    this.props.setPassword(password);\n  };\n\n  onLogin = () => {\n    this.onClickWindow();\n    this.props.login(this.props.email, this.props.password);\n  }\n\n  onCreateAccount = () => {\n    this.onClickWindow();\n    this.props.createAccount(this.props.email, this.props.password);\n  }\n\n  onPlayAgain = () => {\n    this.setState(() => ({\n      endofroundDisplay: \"none\",\n      questionDisplay: \"block\"\n    }))\n  }\n\n  onClickImg = () => {\n    this.props.history.push(\"/\");\n  }\n\n  onClickPlay = () => {\n    this.setState(() => ({ questionDisplay: \"block\" }));\n  }\n\n  onClickLogin = () => {\n    this.setState(() => ({ loginDisplay: \"block\" }));\n  }\n\n  onClickLeaderboard = () => {\n    console.log(this.props.leaderboard);\n    this.setState(() => ({ leaderboardDisplay: \"block\" }));\n  }\n\n  onClickWindow = () => {\n    this.setState(() => ({ \n      loginDisplay: \"none\",\n      questionDisplay: \"none\",\n      leaderboardDisplay: \"none\",\n      endofroundDisplay: \"none\"\n    }));\n\n    if (this.props.isLoggedIn === true) {\n      this.props.updateHighscore(this.props.email);\n    }\n    this.props.updateLeaderboard();\n  }\n\n  onEndRound = () => {\n    this.props.setGamescore(24);\n    this.setState(() => ({ \n      endofroundDisplay: \"block\"\n    }));\n    if (this.props.isLoggedIn) {\n      this.props.sendGamescore(this.props.email, 24);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"home-container\">\n        <header className=\"header\">\n          <img src={recycle} onClick={this.onClickImg} alt=\"Recycle Game\" height=\"42\" width=\"42\"></img>\n          <button className=\"header-button\" onClick={this.onClickLeaderboard}>Leaderboard</button>          \n          <button className=\"header-button\" onClick={this.onClickLogin}>Login</button>          \n        </header>\n        <div>\n          <h1 className=\"h1\">Recycle Game</h1>\n          {this.props.isLoggedIn === true && (\n            <h2>{this.props.email}</h2>\n          )}\n          {this.props.isLoggedIn === true && (\n            <h3>Highscore: {this.props.highscore}</h3>\n          )}\n          <center>\n            <button className=\"screen-button\" onClick={this.onClickPlay}>Play Game</button>\n            \n          </center>\n        </div>\n\n        <div id=\"questions\" className=\"modal\" style={{display: this.state.questionDisplay}}>  \n          <form className=\"modal-content animate\" onSubmit={this.onSubmitQuestions}>\n            <div className=\"container\">\n              <label className=\"question\" for=\"uname\"><b>Question 1</b></label>\n              <select className=\"styled-select\" onChange={this.onQuestionOneChange} type=\"text\" value={this.state.q1} required>\n                <option value=\"\">Yes / No</option>\n                <option value={1}>Yes</option>\n                <option value={0}>No</option>\n              </select>\n              <label className=\"question\" for=\"psw\"><b>Question 2</b></label>\n              <select className=\"styled-select\" onChange={this.onQuestionTwoChange} type=\"password\" value={this.state.q2} required>\n                <option value=\"\">Yes / No</option>\n                <option value={1}>Yes</option>\n                <option value={0}>No</option>\n              </select>\n              <label className=\"question\" for=\"psw\"><b>Question 3</b></label>\n              <select className=\"styled-select\" onChange={this.onQuestionThreeChange} type=\"password\" value={this.state.q3} required>\n                <option value=\"\">Yes / No</option>\n                <option value={1}>Yes</option>\n                <option value={0}>No</option>\n              </select>        \n              <button className=\"menu-button\" type=\"submit\">Play Game</button>\n              <button className=\"menu-button\" type=\"button\" onClick={this.onClickWindow}>Cancel</button>\n            </div>\n          </form>\n        </div>\n\n        <div id=\"login\" className=\"modal\" style={{display: this.state.loginDisplay}}>  \n          <form className=\"leaderboard-modal-content animate\" onSubmit={this.onLogin}>\n            <div className=\"container\">\n              <label for=\"uname\"><b>Email</b></label>\n              <input \n                value={this.props.email}\n                onChange={event => this.onEmailChange(event)}\n                type=\"text\" \n                placeholder=\"Enter Username\" \n                name=\"uname\" \n                required>\n              </input>\n              <label for=\"psw\"><b>Password</b></label>\n              <input \n                value={this.props.password}\n                onChange={event => this.onPasswordChange(event)}\n                type=\"password\" \n                placeholder=\"Enter Password\" \n                name=\"psw\" \n                required></input>        \n              <button className=\"menu-button\" type=\"button\" onClick={this.onLogin}>Login</button>\n              <button className=\"menu-button\" type=\"button\" onClick={this.onCreateAccount}>(Don't Have An Account?) Create One!</button>\n              <button className=\"menu-button\" type=\"button\" onClick={this.onClickWindow}>Cancel</button>\n            </div>\n          </form>\n        </div>\n\n        <div id=\"leaderboard\" className=\"modal\" style={{display: this.state.leaderboardDisplay}}>  \n          <form className=\"leaderboard-modal-content animate\">\n            <div className=\"container\">\n              <Table \n                className=\"table\"\n                noDataText=\"No matching records found\"\n                itemsPerPage={10}\n                data={this.props.leaderboard}>\n                <Thead>\n                  <Th column=\"email\">Name</Th>\n                  <Th column=\"score\">Score</Th>\n                </Thead>\n              </Table>\n              <button className=\"menu-button\" type=\"button\" onClick={this.onClickWindow}>Close</button>\n            </div>            \n          </form>\n        </div>\n\n        <div id=\"end-of-round\" className=\"modal\" style={{display: this.state.endofroundDisplay}}> \n          <form className=\"leaderboard-modal-content animate\" onSubmit={this.onLogin}>\n            <div className=\"container\">\n              <h1 className=\"h1-window\">End Of Round</h1>\n              <h2>Score: {this.props.gamescore}</h2>\n              <button className=\"menu-button\" type=\"button\" onClick={this.onPlayAgain}>Play Again</button>\n              <button className=\"menu-button\" type=\"button\" onClick={this.onClickWindow}>Close</button>\n            </div>\n          </form>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HomeComponent;","import HomeContainer from './HomeContainer';\nexport default HomeContainer;","import { connect } from 'react-redux';\nimport HomeComponent from './HomeComponent';\nimport { homeOperations } from './duck';\n\nconst mapStateToProps = state => ({\n  email: state.home.email,\n  password: state.home.password,\n  isLoggedIn: state.home.isLoggedIn,\n  highscore: state.home.highscore,\n  leaderboard: state.home.leaderboard,\n  gamescore: state.home.gamescore\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setEmail: email => {\n    dispatch(homeOperations.setEmail(email));\n  },\n  setPassword: password => {\n    dispatch(homeOperations.setPassword(password));\n  },\n  setGamescore: gamescore => {\n    dispatch(homeOperations.setGamescore(gamescore));\n  },\n  updateHighscore: email => {\n    dispatch(homeOperations.updateHighscore(email));\n  },\n  updateLeaderboard: () => {\n    dispatch(homeOperations.updateLeaderboard());\n  },\n  sendGamescore: (email, gamescore) => {\n    dispatch(homeOperations.sendGamescore(email, gamescore));\n  },\n  login: (email, password) => {\n    dispatch(homeOperations.login(email, password));\n  },\n  createAccount: (email, password) => {\n    dispatch(homeOperations.createAccount(email, password));\n  }\n});\n\nconst HomeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomeComponent);\n\nexport default HomeContainer;","import GameComponent from './GameComponent';\nexport default GameComponent;","import React from 'react';\n\nclass GameComponent extends React.Component {  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gameScore: 0\n    };\n  }\n  render() {\n    return (\n      <div>Page here</div>\n    );\n  }\n}\n\nexport default GameComponent;","import React, { Component } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\n// add components here\nimport Home from './home';\nimport Game from './game';\n\nexport const history = createHistory();\n//const baseUrl = \"\"; // when game is on localhost\nconst baseUrl = \"Recycle-Game\"; // for when game is hosted\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <Route exact path={\"Recycle-Game/\"} component={Home} />\n          <Route exact path={baseUrl + \"/game\"} component={Game} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","import App from './App';\nexport default App;\n\n","export default {\n    s3: {\n        REGION: \"us-east-2\",\n        BUCKET: \"recycle-app-client\"\n    },\n    apiGateway: {\n        REGION: \"us-east-2\",\n        URL: \"https://f3opzr7nk8.execute-api.us-east-2.amazonaws.com/default\"\n    },\n    cognito: {\n        REGION: \"us-east-2\",\n        USER_POOL_ID: \"us-east-2_bt6Q6kYT7\",\n        APP_CLIENT_ID: \"1vjrj6brs1299429rlabdaje31\",\n        IDENTITY_POOL_ID: \"us-east-2:f7e4c12b-9fd7-414a-b546-c7dd96dede25\"\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\nimport * as serviceWorker from './serviceWorker';\nimport App from './app';\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\n\n\nconst store = configureStore();\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nAmplify.configure({ Auth: {\n        mandatorySignIn: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID, identityPoolId: config.cognito.IDENTITY_POOL_ID, userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    }, Storage: {\n        region: config.s3.REGION,\n        bucket: config.s3.BUCKET,\n        identityPoolId: config.cognito.IDENTITY_POOL_ID\n    }\n});\nReactDOM.render(jsx, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}